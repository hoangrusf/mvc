@using blog.Models
@model IEnumerable<Category>
@{
    ViewData["Title"] = "Index";
    Layout = "_Layout";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.ParentCategory)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
     @foreach (var item in Model) {
        int level = 0;
        await RenderCategory(item, level);
     }
    </tbody>
</table>
@{
    async Task RenderCategory(Category item, int level)
    {
        string prefix = String.Concat(Enumerable.Repeat("&nbsp;&nbsp;&nbsp;&nbsp;", level));

        <tr>
            <td>
                @Html.Raw(prefix) @Html.DisplayFor(modelItem => item.Title)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.ParentCategory.Title)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Sửa</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Chi tiết</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Xóa</a>
            </td>
        </tr>
        if (item.CategoryChildren?.Count > 0)
        {
            foreach (var cCategory in item.CategoryChildren)
            {
                await RenderCategory(cCategory, level + 1);
            }
        }
    }
}